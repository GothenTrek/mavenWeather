/*
 * Author: George Othen
 * Title: Weather GUI
 * Date: 6/03/2016
 */
package com.mycompany.mavenweather;

import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.stream.XMLStreamException;
import org.xml.sax.SAXException;

/**
 *
 * @author Gurge
 */
public class WeatherGUI extends javax.swing.JFrame {

    private ArrayList<Location> list;
    private static WeatherParser parser;
    private static SearchParser search;
    private WeatherDescription descrip;
    private DefaultListModel listModel = new DefaultListModel();
    private static WeatherManager weatherMan;
    String weatherText;

    /**
     * Creates new form WeatherGUI
     */
    public WeatherGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("URL");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton1.setText("Forecast");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setPreferredSize(new java.awt.Dimension(164, 32));
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.setPreferredSize(new java.awt.Dimension(128, 128));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 69, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 69, Short.MAX_VALUE)))
        );

        jTextField2.setText("Bangor");

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList1.setModel(listModel);
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane2)))
                .addGap(12, 12, 12)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * actionlistener for forecast button
     * @param evt event triggered by activation of the forecast button
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            
            if (jTextField1.getText() != null && !"".equals(jTextField1.getText())) {
                weatherText = parser.getWeatherString(jTextField1.getText());
                jTextArea1.setText(weatherText);
            }
            else{
                String choice = jComboBox1.getSelectedItem().toString();
                for (Location local : list) {
                if(choice.equals(local.getCountry() + ", " + local.getPlaceName())){
                    jTextArea1.setText(parser.getWeatherStringCon(local.getGeonameId()));
                }
            }
            }
        } catch (IOException | SAXException ex) {}
        if(jComboBox1.getItemCount() != 0)
        descrip = parser.getWeatherInformation();
        listModel.clear(); fillInformation();        
        setImage();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * actionListener for search button
     * @param evt event triggered by activation of Search button
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
        SearchHandler.list.clear();
        try {
            if(jComboBox1.getItemCount() != 0) jComboBox1.removeAllItems();
            list = search.getLocationNames(jTextField2.getText());
            for (Location local : list) {
                jComboBox1.addItem(local.getCountry() + ", " + local.getPlaceName());
            }

        } catch (IOException | SAXException ex) {
            Logger.getLogger(WeatherGUI.class.getName()).log(Level.SEVERE, null, ex);
        }   
        try {
            weatherMan.manageWeather(jTextField2.getText());
        } catch (IOException | XMLStreamException | ParserConfigurationException | SAXException ex) {
            Logger.getLogger(WeatherGUI.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     * @throws javax.xml.parsers.ParserConfigurationException
     * @throws org.xml.sax.SAXException
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws ParserConfigurationException, SAXException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        parser = new WeatherParser();
        search = new SearchParser();
        weatherMan = new WeatherManager();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(()
                -> {
            new WeatherGUI().setVisible(true);
        });
    }
    
    /**
     * display weather information e.g. temp, wind direction, speed, etc in gui
     */
    private void fillInformation() {        
        listModel.addElement("Temperature: " + descrip.getTemperature());
        listModel.addElement("Wind Direction: " + descrip.getWindDir());
        listModel.addElement("Wind Speed: " + descrip.getWindSpd());
        listModel.addElement("Humidity: " + descrip.getHumidity());
        listModel.addElement("Pressure: " + descrip.getPressure());
        listModel.addElement("Visibility: " + descrip.getVisibility());
    }

    /**
     * method that returns weather information to getFileName method
     * @return built string that contains weather info e.g. cloudy or sunny or snow or thunder or etc
     */
    public String getWeatherDescription() {
        boolean startRecord = false;
        StringBuilder buffer = new StringBuilder();
        for (int i = 0; i < jTextArea1.getText().length(); i++) {
            if (i > 5 && jTextArea1.getText().charAt(i - 2) == ':' && jTextArea1.getText().charAt(i - 1) != '0') {
                startRecord = true;
            }
            if (jTextArea1.getText().charAt(i) == ',') {
                startRecord = false;
            }
            if (startRecord) {
                buffer.append(jTextArea1.getText().charAt(i));
            }
        }
        return buffer.toString();
    }

    public String getFileName() {
        switch (getWeatherDescription()) { //switch weather desciption for image file path
            case "Thick Cloud":
                return "black low level cloud.png";
                
            case "Mist":
            case "Fog":
                return "Mist.png";
                
            case "Light Cloud":
            case "Partly Cloudy":
                return "light cloud.png";

            case "Heavy Rain":
            case "Heavy Rain Shower":
                return "heavy rain.png";

            case "Drizzle":
            case "Light Rain":
                return "drizzle 2.png";

            case "Hail":
                return "hail.png";
            case "Light Rain Shower":
                return "light rain.png";
            case "Sunny":
                return "sunny.png";
            case "Sunny Intervals":
                return "sunny intervals.png";
            case "Clear Sky":
                return "clear sky.png";
            case "Sleet":
                return "sleet.png";

            case "Snow":
            case "Light Snow":
                return "light snow.png";
            case "Heavy Snow":
                return "heavy snow.png";

            case "Thunderstorm":
            case "Thundery Shower":
                return "thunderstorm.png";
            default:
                return "drizzle 2.png";
        }
    }

    /**
     * Method that sets the image based on weather info
     */
    public void setImage() {
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/" + getFileName()));
        //http://www.coderanch.com/t/331731/GUI/java/Resize-ImageIcon
        Image img = icon.getImage();
        Image newimg = img.getScaledInstance(128, 128, java.awt.Image.SCALE_SMOOTH);
        ImageIcon newIcon = new ImageIcon(newimg);
        jLabel2.setIcon(newIcon);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
